#include <iostream>
using namespace std;

/* Define your function here */ 

int DaysInFeb(int userYear) 
{
   if (userYear == 1900) //1900 exception, not a leap year
      return 28;
   else if ((userYear % 4 == 0 && userYear % 100 == 0) || (userYear % 4 == 0))
      return 29; //leap year
   else 
      return 28; //not leapyear 
}


int main() {
   /* Type your code here. Your code must call the function. */
   int yearInput, days;
   cin >> yearInput; 
   
   days = DaysInFeb(yearInput);
   
   cout << yearInput << " has " << days << " days in February." << endl;;

   return 0;
}


/*

A common year in the modern Gregorian Calendar consists of 365 days. In reality, Earth takes longer to rotate around the sun. To account for the difference in time, every 4 years, a leap year takes place. A leap year is when a year has 366 days: An extra day, February 29th. The requirements for a given year to be a leap year are:

1) The year must be divisible by 4

2) If the year is a century year (1700, 1800, etc.), the year must be evenly divisible by 400

Some example leap years are 1600, 1712, and 2016.

Write a program that takes in a year and determines the number of days in February for that year.

Ex: If the input is:

1712
the output is:

1712 has 29 days in February.
Ex: If the input is:

1913
the output is:

1913 has 28 days in February.
Your program must define and call the following function. The function should return the number of days in February for the input year.

int DaysInFeb(int userYear)

*/
